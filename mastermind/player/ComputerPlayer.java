//@author vincent - Group 13
package mastermind.player;

import mastermind.board.Board;
import mastermind.board.Row;
import mastermind.strategy.Strategy;
import mastermind.strategy.RandomStrategy;

public class ComputerPlayer extends Player {
    private final Strategy m_strategy;

    /**
    * constructs a ComputerPlayer with a role and a strategy
    *
    * @param role role of the player (BREAKER or MAKER) != null
    * @param strategy sets used by computer to make guesses or initiate the code must not be null
    * @pre role != null && strategy != n
    * @post super(role) && this.strategy =startegy
    */
    public ComputerPlayer(Role role, Strategy strategy) {
        super(role);
        m_strategy = strategy;
    }
    /**
    * returns guess generated by the strategy
    *
    * @param board current game board != 0
    * @return a Row that is the guess
    * @pre board !=null
    * @post result != null && result.length() == board.getRowSize()
    */
    @Override
    public Row getGuess(Board board) {
        return m_strategy.getGuess(board);
    }

    /**
    * returns start combination generated by strategy
    *
    * @param board current game board != 0
    * @return a Row that is starting combination
    * @pre board !=null
    * @post result != null && result.length() == board.getRowSize()
    */
    @Override
    public Row getStartCombination(Board board) {
        return m_strategy.getStartCombination(board);
    }
}
